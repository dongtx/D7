//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Expression.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace D7.ModeledKnowledge.Infrastructure.Formula
{
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class ExpressionLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WS=1, LPAREN=2, RPAREN=3, MULT=4, DIVIDE=5, DASH=6, PLUS=7, MINUS=8, EQUALS=9, 
		NOT_EQUALS=10, AND=11, OR=12, GT=13, LESS=14, GTE=15, LTE=16, SEMI=17, 
		COMMA=18, ASSIGN=19, INT=20, FLOAT=21, ID=22, STRING=23;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "LPAREN", "RPAREN", "MULT", "DIVIDE", "DASH", "PLUS", "MINUS", "EQUALS", 
		"NOT_EQUALS", "AND", "OR", "GT", "LESS", "GTE", "LTE", "SEMI", "COMMA", 
		"ASSIGN", "INT", "FLOAT", "ID", "STRING"
	};


	public ExpressionLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ExpressionLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'('", "')'", "'*'", "'/'", "'^'", "'+'", "'-'", "'=='", "'!='", 
		"'&&'", "'||'", "'>'", "'<'", "'>='", "'<='", "';'", "','", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "LPAREN", "RPAREN", "MULT", "DIVIDE", "DASH", "PLUS", "MINUS", 
		"EQUALS", "NOT_EQUALS", "AND", "OR", "GT", "LESS", "GTE", "LTE", "SEMI", 
		"COMMA", "ASSIGN", "INT", "FLOAT", "ID", "STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Expression.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ExpressionLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x19', '\xB2', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x3', '\x2', '\x6', '\x2', '\x33', '\n', '\x2', '\r', '\x2', 
		'\xE', '\x2', '\x34', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x6', 
		'\x15', '\x64', '\n', '\x15', '\r', '\x15', '\xE', '\x15', '\x65', '\x3', 
		'\x15', '\x3', '\x15', '\a', '\x15', 'j', '\n', '\x15', '\f', '\x15', 
		'\xE', '\x15', 'm', '\v', '\x15', '\x3', '\x15', '\x3', '\x15', '\x5', 
		'\x15', 'q', '\n', '\x15', '\x3', '\x15', '\x6', '\x15', 't', '\n', '\x15', 
		'\r', '\x15', '\xE', '\x15', 'u', '\x5', '\x15', 'x', '\n', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x5', '\x15', '|', '\n', '\x15', '\x3', '\x15', 
		'\x6', '\x15', '\x7F', '\n', '\x15', '\r', '\x15', '\xE', '\x15', '\x80', 
		'\x5', '\x15', '\x83', '\n', '\x15', '\x3', '\x16', '\x3', '\x16', '\x6', 
		'\x16', '\x87', '\n', '\x16', '\r', '\x16', '\xE', '\x16', '\x88', '\x3', 
		'\x16', '\x3', '\x16', '\x5', '\x16', '\x8D', '\n', '\x16', '\x3', '\x16', 
		'\x6', '\x16', '\x90', '\n', '\x16', '\r', '\x16', '\xE', '\x16', '\x91', 
		'\x5', '\x16', '\x94', '\n', '\x16', '\x3', '\x17', '\x3', '\x17', '\a', 
		'\x17', '\x98', '\n', '\x17', '\f', '\x17', '\xE', '\x17', '\x9B', '\v', 
		'\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\a', 
		'\x18', '\xA1', '\n', '\x18', '\f', '\x18', '\xE', '\x18', '\xA4', '\v', 
		'\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x18', '\a', '\x18', '\xAB', '\n', '\x18', '\f', '\x18', '\xE', '\x18', 
		'\xAE', '\v', '\x18', '\x3', '\x18', '\x5', '\x18', '\xB1', '\n', '\x18', 
		'\x2', '\x2', '\x19', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', 
		'\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', 
		'\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', 
		'\x11', '!', '\x12', '#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', 
		'+', '\x17', '-', '\x18', '/', '\x19', '\x3', '\x2', '\t', '\x5', '\x2', 
		'\v', '\f', '\xF', '\xF', '\"', '\"', '\x4', '\x2', 'G', 'G', 'g', 'g', 
		'\x4', '\x2', '-', '-', '/', '/', '\a', '\x2', '&', '&', '\x42', '\\', 
		'\x61', '\x61', '\x63', '|', '\x4E02', '\x9FA7', '\b', '\x2', '\x30', 
		'\x30', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x4E02', 
		'\x9FA7', '\x4', '\x2', '$', '$', '^', '^', '\x4', '\x2', ')', ')', '^', 
		'^', '\x2', '\xC5', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x32', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\a', ':', '\x3', '\x2', '\x2', '\x2', 
		'\t', '<', '\x3', '\x2', '\x2', '\x2', '\v', '>', '\x3', '\x2', '\x2', 
		'\x2', '\r', '@', '\x3', '\x2', '\x2', '\x2', '\xF', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x11', '\x44', '\x3', '\x2', '\x2', '\x2', '\x13', '\x46', 
		'\x3', '\x2', '\x2', '\x2', '\x15', 'I', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'L', '\x3', '\x2', '\x2', '\x2', '\x19', 'O', '\x3', '\x2', '\x2', '\x2', 
		'\x1B', 'R', '\x3', '\x2', '\x2', '\x2', '\x1D', 'T', '\x3', '\x2', '\x2', 
		'\x2', '\x1F', 'V', '\x3', '\x2', '\x2', '\x2', '!', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '#', '\\', '\x3', '\x2', '\x2', '\x2', '%', '^', '\x3', 
		'\x2', '\x2', '\x2', '\'', '`', '\x3', '\x2', '\x2', '\x2', ')', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '+', '\x84', '\x3', '\x2', '\x2', '\x2', '-', 
		'\x95', '\x3', '\x2', '\x2', '\x2', '/', '\xB0', '\x3', '\x2', '\x2', 
		'\x2', '\x31', '\x33', '\t', '\x2', '\x2', '\x2', '\x32', '\x31', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\x34', '\x3', '\x2', '\x2', '\x2', '\x34', 
		'\x32', '\x3', '\x2', '\x2', '\x2', '\x34', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\x36', '\x3', '\x2', '\x2', '\x2', '\x36', '\x37', '\b', 
		'\x2', '\x2', '\x2', '\x37', '\x4', '\x3', '\x2', '\x2', '\x2', '\x38', 
		'\x39', '\a', '*', '\x2', '\x2', '\x39', '\x6', '\x3', '\x2', '\x2', '\x2', 
		':', ';', '\a', '+', '\x2', '\x2', ';', '\b', '\x3', '\x2', '\x2', '\x2', 
		'<', '=', '\a', ',', '\x2', '\x2', '=', '\n', '\x3', '\x2', '\x2', '\x2', 
		'>', '?', '\a', '\x31', '\x2', '\x2', '?', '\f', '\x3', '\x2', '\x2', 
		'\x2', '@', '\x41', '\a', '`', '\x2', '\x2', '\x41', '\xE', '\x3', '\x2', 
		'\x2', '\x2', '\x42', '\x43', '\a', '-', '\x2', '\x2', '\x43', '\x10', 
		'\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\a', '/', '\x2', '\x2', '\x45', 
		'\x12', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\a', '?', '\x2', '\x2', 
		'G', 'H', '\a', '?', '\x2', '\x2', 'H', '\x14', '\x3', '\x2', '\x2', '\x2', 
		'I', 'J', '\a', '#', '\x2', '\x2', 'J', 'K', '\a', '?', '\x2', '\x2', 
		'K', '\x16', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', '(', '\x2', '\x2', 
		'M', 'N', '\a', '(', '\x2', '\x2', 'N', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'O', 'P', '\a', '~', '\x2', '\x2', 'P', 'Q', '\a', '~', '\x2', '\x2', 
		'Q', '\x1A', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', '@', '\x2', '\x2', 
		'S', '\x1C', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\a', '>', '\x2', '\x2', 
		'U', '\x1E', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', '@', '\x2', '\x2', 
		'W', 'X', '\a', '?', '\x2', '\x2', 'X', ' ', '\x3', '\x2', '\x2', '\x2', 
		'Y', 'Z', '\a', '>', '\x2', '\x2', 'Z', '[', '\a', '?', '\x2', '\x2', 
		'[', '\"', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\a', '=', '\x2', '\x2', 
		']', '$', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', '.', '\x2', '\x2', 
		'_', '&', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\a', '?', '\x2', '\x2', 
		'\x61', '(', '\x3', '\x2', '\x2', '\x2', '\x62', '\x64', '\x4', '\x32', 
		';', '\x2', '\x63', '\x62', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', 
		'\x3', '\x2', '\x2', '\x2', '\x65', '\x63', '\x3', '\x2', '\x2', '\x2', 
		'\x65', '\x66', '\x3', '\x2', '\x2', '\x2', '\x66', '\x82', '\x3', '\x2', 
		'\x2', '\x2', 'g', 'k', '\a', '\x30', '\x2', '\x2', 'h', 'j', '\x4', '\x32', 
		';', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 'j', 'm', '\x3', '\x2', 
		'\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\x3', '\x2', 
		'\x2', '\x2', 'l', 'w', '\x3', '\x2', '\x2', '\x2', 'm', 'k', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'p', '\t', '\x3', '\x2', '\x2', 'o', 'q', '\t', '\x4', 
		'\x2', '\x2', 'p', 'o', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', 
		'\x2', '\x2', 'q', 's', '\x3', '\x2', '\x2', '\x2', 'r', 't', '\x4', '\x32', 
		';', '\x2', 's', 'r', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x3', '\x2', 
		'\x2', '\x2', 'u', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'x', '\x3', '\x2', '\x2', '\x2', 'w', 'n', '\x3', '\x2', 
		'\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', '\x2', 'x', '\x83', '\x3', 
		'\x2', '\x2', '\x2', 'y', '{', '\t', '\x3', '\x2', '\x2', 'z', '|', '\t', 
		'\x4', '\x2', '\x2', '{', 'z', '\x3', '\x2', '\x2', '\x2', '{', '|', '\x3', 
		'\x2', '\x2', '\x2', '|', '~', '\x3', '\x2', '\x2', '\x2', '}', '\x7F', 
		'\x4', '\x32', ';', '\x2', '~', '}', '\x3', '\x2', '\x2', '\x2', '\x7F', 
		'\x80', '\x3', '\x2', '\x2', '\x2', '\x80', '~', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x81', '\x3', '\x2', '\x2', '\x2', '\x81', '\x83', '\x3', 
		'\x2', '\x2', '\x2', '\x82', 'g', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'y', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\x3', '\x2', '\x2', 
		'\x2', '\x83', '*', '\x3', '\x2', '\x2', '\x2', '\x84', '\x86', '\a', 
		'\x30', '\x2', '\x2', '\x85', '\x87', '\x4', '\x32', ';', '\x2', '\x86', 
		'\x85', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x86', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\x3', 
		'\x2', '\x2', '\x2', '\x89', '\x93', '\x3', '\x2', '\x2', '\x2', '\x8A', 
		'\x8C', '\t', '\x3', '\x2', '\x2', '\x8B', '\x8D', '\t', '\x4', '\x2', 
		'\x2', '\x8C', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8D', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8E', 
		'\x90', '\x4', '\x32', ';', '\x2', '\x8F', '\x8E', '\x3', '\x2', '\x2', 
		'\x2', '\x90', '\x91', '\x3', '\x2', '\x2', '\x2', '\x91', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '\x91', '\x92', '\x3', '\x2', '\x2', '\x2', '\x92', 
		'\x94', '\x3', '\x2', '\x2', '\x2', '\x93', '\x8A', '\x3', '\x2', '\x2', 
		'\x2', '\x93', '\x94', '\x3', '\x2', '\x2', '\x2', '\x94', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x95', '\x99', '\t', '\x5', '\x2', '\x2', '\x96', 
		'\x98', '\t', '\x6', '\x2', '\x2', '\x97', '\x96', '\x3', '\x2', '\x2', 
		'\x2', '\x98', '\x9B', '\x3', '\x2', '\x2', '\x2', '\x99', '\x97', '\x3', 
		'\x2', '\x2', '\x2', '\x99', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9A', 
		'.', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x99', '\x3', '\x2', '\x2', 
		'\x2', '\x9C', '\xA2', '\a', '$', '\x2', '\x2', '\x9D', '\x9E', '\a', 
		'^', '\x2', '\x2', '\x9E', '\xA1', '\v', '\x2', '\x2', '\x2', '\x9F', 
		'\xA1', '\n', '\a', '\x2', '\x2', '\xA0', '\x9D', '\x3', '\x2', '\x2', 
		'\x2', '\xA0', '\x9F', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA4', '\x3', 
		'\x2', '\x2', '\x2', '\xA2', '\xA0', '\x3', '\x2', '\x2', '\x2', '\xA2', 
		'\xA3', '\x3', '\x2', '\x2', '\x2', '\xA3', '\xA5', '\x3', '\x2', '\x2', 
		'\x2', '\xA4', '\xA2', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xB1', '\a', 
		'$', '\x2', '\x2', '\xA6', '\xAC', '\a', ')', '\x2', '\x2', '\xA7', '\xA8', 
		'\a', '^', '\x2', '\x2', '\xA8', '\xAB', '\v', '\x2', '\x2', '\x2', '\xA9', 
		'\xAB', '\n', '\b', '\x2', '\x2', '\xAA', '\xA7', '\x3', '\x2', '\x2', 
		'\x2', '\xAA', '\xA9', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAE', '\x3', 
		'\x2', '\x2', '\x2', '\xAC', '\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', 
		'\xAD', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAF', '\x3', '\x2', '\x2', 
		'\x2', '\xAE', '\xAC', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xB1', '\a', 
		')', '\x2', '\x2', '\xB0', '\x9C', '\x3', '\x2', '\x2', '\x2', '\xB0', 
		'\xA6', '\x3', '\x2', '\x2', '\x2', '\xB1', '\x30', '\x3', '\x2', '\x2', 
		'\x2', '\x16', '\x2', '\x34', '\x65', 'k', 'p', 'u', 'w', '{', '\x80', 
		'\x82', '\x88', '\x8C', '\x91', '\x93', '\x99', '\xA0', '\xA2', '\xAA', 
		'\xAC', '\xB0', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace D7.ModeledKnowledgeINFRA.Expression
